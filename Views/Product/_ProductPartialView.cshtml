@model IPagedList<BuildingShopCore.Models.Product>
@using X.PagedList;
@using X.PagedList.Extensions;
@using X.Web.PagedList

<div class="navbar-nav-scroll">
    <table class="table table-hover" id="productsTable">
        <thead>
            <tr>
                <th scope="col">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="my-custom-button">Номер</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="my-custom-button">Наименование</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="my-custom-button">Цена</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CountSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="my-custom-button">Количество</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CatSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="my-custom-button">Категория</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["ProdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="my-custom-button">Производитель</a>
                </th>
                <th></th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td scope="row">
                    @item.Id
                </td>
                <td scope="row">
                    @item.Name
                </td>
                <td scope="row">
                    @item.Price
                </td>
                <td scope="row">
                    @item.Count
                </td>
                <td scope="row">
                    @if(item.Category!=null)
                    @item.Category.Name
                </td>
                <td scope="row">
                    @item.Prod
                </td>
                <td scope="row">
                    <div class="btn-group dropstart d-print-none">
                        <button class="my-custom-button table-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        </button>
                        <ul class="dropdown-menu text-center">
                            <li><a asp-action="Edit" asp-route-id="@item.Id" class="my-custom-link d-grid">Редактировать</a></li>
                            <li><a asp-action="Info" asp-route-id="@item.Id" class="my-custom-link d-grid">Информация</a></li>
                            <li><a asp-action="Delete" asp-route-id="@item.Id" class="my-custom-link d-grid">Удалить</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>

<div class="d-print-none">
    Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewData["CurrentSort"], currentFilter = ViewData["CurrentFilter"] }))
</div>